% Quasi-manual runs of the inverse instrument model (reading from
% Orbit sim data) and processing the simulated L0-payload prepped
% netCDF files with the L1A algorithm.
% We do this by manually assigning the pd structure elements before
% calling produce_L1A_granule.
%
% Note that the associated prepped Bus data NC files were manually
% copied into the inputs directory (though they could be referenced
% directly to the /data/datasim locations)
%
% In addition to being able to run inside the MatLab IDE, this can be run
%  at the command-line directly from 'source/matlab/' using
%       bash run_matlab_script.sh testing_scripts/run_IIM_thermal_test

addpath('../functions');
addpath('../PREFIRE_tools/functions');
addpath('../PREFIRE_L0/functions');

pd = configure_toplevel_IO;

pd.L0_anc_data_dir = getenv('L0_ANC_DIR');
if strlength(pd.L0_anc_data_dir) < 1
   % Set this to the PREFIRE_L0 repo's dist/ancillary directory:
   pd.L0_anc_data_dir = '../../../../PREFIRE_L0/dist/ancillary';
end

calseq_ct_origin = 662800000;
calseq_cadence = 675.0;
% 6, 12, and 24 frame dwell times, in seconds.
calseq_frame_lengths = [6, 12, 24];
calseq_time_lengths = calseq_frame_lengths * 0.7;
noise_scale = 1.0;
rng_seed = 1234567;
write_matfile = false;

% note the source files are from:
% /data/datasim/orbitsim_02/by_kind/ANC-SimRad-FullRes/
% but are symlinked into the test directory.

test_dir = '/data/users/mmm/TIRS_IIM_test_data/';

output_dir = test_dir;

% TIRS1
TIRS1_granules = { ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101081841_00010.nc', ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101095410_00011.nc', ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101112938_00012.nc', ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101130507_00013.nc', ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101144035_00014.nc', ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101161604_00015.nc', ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101175132_00016.nc', ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101192700_00017.nc', ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101210229_00018.nc', ...
    'PREFIRE_SAT1_ANC-SimRad-FullRes_B02_R00_20210101223757_00019.nc'};
% TIRS2
TIRS2_granules = {
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101050554_00009.nc', ...
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101064106_00010.nc', ...
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101081619_00011.nc', ...
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101095131_00012.nc', ...
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101112644_00013.nc', ...
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101130156_00014.nc', ...
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101143708_00015.nc', ...
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101161221_00016.nc', ...
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101174733_00017.nc', ...
    'PREFIRE_SAT2_ANC-SimRad-FullRes_B02_R00_20210101192246_00018.nc'};


num_granules = length(TIRS1_granules);
num_granules = 1;

for c = 1:length(calseq_frame_lengths);
    for n = 1:num_granules;

        tic;
        rad_fpath = [test_dir TIRS1_granules{n}];
        output_fpath = [ ...
            output_dir ...
            sprintf('%02dFrameDwell/', calseq_frame_lengths(c)) ...
            strrep(TIRS1_granules{n}, ...
                   'PREFIRE_SAT1_ANC-SimRad', ...
                   'prefire_01_simpayload_tlm') ...
            ];
        [out_dir, ~, ~] = fileparts(output_fpath);
        errstat = mkdir(out_dir);
        dummy = TIRS_inverse_instrument_model( ...
            pd, rad_fpath, output_fpath, calseq_ct_origin, calseq_cadence, ...
            calseq_time_lengths(c), true, rng_seed, noise_scale, write_matfile);
        disp(['Processed: ' TIRS1_granules{n} ' etime: ' num2str(toc)]);

        tic;
        rad_fpath = [test_dir TIRS2_granules{n}];
        output_fpath = [ ...
            output_dir ...
            sprintf('%02dFrameDwell/', calseq_frame_lengths(c)) ...
            strrep(TIRS2_granules{n}, ...
                   'PREFIRE_SAT2_ANC-SimRad', ...
                   'prefire_02_simpayload_tlm') ...
            ];
        [out_dir, ~, ~] = fileparts(output_fpath);
        errstat = mkdir(out_dir);
        dummy = TIRS_inverse_instrument_model( ...
            pd, rad_fpath, output_fpath, calseq_ct_origin, calseq_cadence, ...
            calseq_time_lengths(c), true, rng_seed, noise_scale, write_matfile);
        disp(['Processed: ' TIRS2_granules{n} ' etime: ' num2str(toc)]);

    end
end
